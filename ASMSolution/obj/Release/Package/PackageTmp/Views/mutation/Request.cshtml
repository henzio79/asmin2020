@model ASM_UI.Models.AssetMutationViewModel

@{
    ViewBag.Title = "Mutation Request";
}
<div id="content">
    <!-- row -->
    <div class="row">
        <div class="col-xs-12 col-sm-9 col-md-9 col-lg-9">
            <h1 class="page-title txt-color-blueDark">

                <!-- PAGE HEADER -->
                <i class="fa-fw fa fa-pencil-square-o"></i>
                Mutation
                <span>
                    >
                    Request Form
                </span>
            </h1>
        </div>
    </div>
    <div class="body-content">
        <section id="widget-grid" class="">
            <div class="row">
                <article class="col-xs-12 col-sm-12 col-md-12 col-lg-12">

                    <div class="jarviswidget" id="wid-id-3" data-widget-editbutton="false" data-widget-custombutton="false" data-widget-togglebutton="false" data-widget-collapsed="false">
                        <header>
                            <span class="widget-icon"> <i class="fa fa-edit"></i> </span>
                            <h2>Request Asset Mutation</h2>

                        </header>
                        <div>
                            <!-- widget edit box -->
                            <div class="jarviswidget-editbox">
                                <!-- This area used as dropdown edit box -->

                            </div>
                            <div class="widget-body no-padding">
                                @using (Html.BeginForm("request", "mutation", FormMethod.Post, htmlAttributes: new { @class = "smart-form", enctype = "multipart/form-data" }))
                                {
                                    @*<form id="mutation-form" class="smart-form">*@
                                    <header>
                                        @*<label class="input">
                                                <input type="hidden" name="asset_id" id="assetID" placeholder="Asset ID">
                                            </label>
                                            <label class="input">
                                                <input type="hidden" name="mode" id="modeID" placeholder="Must not be viewed">
                                            </label>*@
                                    </header>
                                    <fieldset>
                                        <fieldset title="Asset Parent">
                                            @Html.AntiForgeryToken()
                                            @*@Html.ValidationBootstrap()*@
                                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                            <br/>
                                            <section>
                                                <div class="row">
                                                    <div class="col-md-2">
                                                        @Html.LabelFor(model => model.request_code, htmlAttributes: new { @class = "control-label" })
                                                    </div>
                                                    <div class="col-md-3">
                                                        <label class="input">
                                                            @Html.EditorFor(model => model.request_code, new { htmlAttributes = new { @class = "form-control col-lg-6", @readonly = "readonly", placeholder = "AUTO" } })
                                                        </label>
                                                    </div>
                                                </div>
                                            </section>
                                            <section>
                                                <div class="row">
                                                    <div class="col-md-2">
                                                        @Html.LabelRequiredFor(model => model.asset_number, htmlAttributes: new { @class = "control-label" })
                                                    </div>
                                                    @Html.HiddenFor(model => Model.asset_id, htmlAttributes: new { @id = "parent_asset_id" })
                                                    <div class="col-lg-3">
                                                        <label class="input">
                                                            @Html.EditorFor(model => model.asset_number, new { htmlAttributes = new { @class = "form-control col-lg-6", @readonly = "readonly", placeholder = "Parent Asset No", id = "parent_asset_number" } })
                                                            @Html.ValidationMessageFor(model => model.asset_id, "", new { @class = "text-danger" })
                                                        </label>
                                                    </div>
                                                    <div class="col-lg-3">
                                                        &nbsp;<a data-toggle="modal" href="#Asset" class="btn btn-success btn-sm" onclick="OpenModalAssetList();"><i class="fa fa-search fa-lg"></i> Asset</a>
                                                    </div>
                                                </div>
                                            </section>
                                            <section>
                                                <div class="row">
                                                    <div class="col-md-2">
                                                        @Html.LabelFor(model => model.asset_name, htmlAttributes: new { @class = "control-label" })
                                                    </div>
                                                    <div class="col-md-3">
                                                        <label class="input">
                                                            @Html.EditorFor(model => model.asset_name, new { htmlAttributes = new { @class = "form-control col-lg-6", @readonly = "readonly", placeholder = "Parent Asset Name", id = "parent_asset_name" } })
                                                        </label>
                                                    </div>
                                                </div>
                                            </section>
                                            <section>
                                                <div class="row">
                                                    <div class="col-md-2">
                                                        @Html.LabelFor(model => model.asset_receipt_date, htmlAttributes: new { @class = "control-label" })
                                                    </div>
                                                    <div class="col-md-3">
                                                        <label class="input">
                                                            <input type="text" name="asset_receipt_date" id="parent_asset_receiptdate" placeholder="Asset Receipt Date" class="form-control" readonly="readonly" />
                                                        </label>
                                                    </div>
                                                </div>
                                            </section>
                                        </fieldset>
                                        <fieldset title="Asset Value & Location">
                                            <section>
                                                <div class="row">
                                                    <div class="col-md-2">
                                                        @Html.LabelFor(model => model.currency_code, htmlAttributes: new { @class = "control-label" })
                                                    </div>
                                                    <div class="col-md-2">
                                                        <label class="input">
                                                            <input type="text" name="currency_code" id="currencycode" placeholder="Currency" class="form-control" readonly="readonly" />
                                                        </label>
                                                    </div>

                                                    <div class="col-md-1">
                                                    </div>
                                                    <div class="col-md-2">
                                                    </div>
                                                    <div class="col-md-2">
                                                        &nbsp;@Html.LabelFor(model => model.current_location_id, htmlAttributes: new { @class = "control-label" })
                                                    </div>

                                                    <div class="col-md-3">
                                                        <label class="input">
                                                            @Html.EditorFor(model => model.location_name, new { htmlAttributes = new { @class = "form-control col-lg-6", @readonly = "readonly", placeholder = "Location Name", id = "currlocationname" } })
                                                            @Html.HiddenFor(model => model.current_location_id, htmlAttributes: new { @id = "currlocationid" })
                                                            @Html.ValidationMessageFor(model => model.current_location_id, "", new { @class = "text-danger" })
                                                        </label>
                                                    </div>

                                                </div>
                                            </section>

                                            <section>
                                                <div class="row">
                                                    <div class="col-md-2">
                                                        @Html.LabelFor(model => model.asset_original_value, htmlAttributes: new { @class = "control-label" })
                                                    </div>
                                                    <div class="col-md-2">
                                                        <label class="input">
                                                            <input type="text" name="asset_original_value" id="assetvalue" placeholder="Price" class="numeric" style="text-align:right;" readonly="readonly" />
                                                            @Html.HiddenFor(model => model.asset_original_value, htmlAttributes: new { @id = "assetvalue" })
                                                        </label>
                                                    </div>

                                                    <div class="col-md-1">
                                                        &nbsp;@Html.LabelFor(model => model.currency_kurs, htmlAttributes: new { @class = "control-label" })
                                                    </div>

                                                    <div class="col-md-2">
                                                        <label class="input">
                                                            @*<input type="text" class="numeric" name="kurs" id="kursID" placeholder="Kurs" style="text-align:right;" readonly>*@
                                                            <input type="text" name="currency_kurs" id="kurs" placeholder="Kurs" class="numeric" style="text-align:right;" readonly="readonly" />
                                                        </label>
                                                    </div>

                                                    <div class="col-md-2">
                                                        &nbsp;@Html.LabelFor(model => model.current_department_id, htmlAttributes: new { @class = "control-label" })
                                                    </div>

                                                    <div class="col-md-3">
                                                        <label class="input">
                                                            @Html.HiddenFor(model => model.current_department_id, htmlAttributes: new { @id = "currdepartmentid" })
                                                            @Html.EditorFor(model => model.department_name, new { htmlAttributes = new { @class = "form-control col-lg-6", @readonly = "readonly", placeholder = "Department Name", id = "currdepartmentname" } })
                                                        </label>
                                                    </div>
                                                </div>
                                            </section>

                                            <section>
                                                <div class="row">
                                                    <div class="col-md-2">
                                                        @Html.LabelFor(model => model.asset_book_value, htmlAttributes: new { @class = "control-label" })
                                                    </div>
                                                    <div class="col-md-2">
                                                        <label class="input">
                                                            @*<input type="text" class="numeric" name="asset_value_usd" id="assetvalueUSDID" placeholder="Asset Value" style="text-align:right;">*@
                                                            <input type="text" name="asset_book_value" id="bookvalue" placeholder="Asset Value" class="numeric" style="text-align:right;" readonly="readonly" />
                                                        </label>
                                                    </div>

                                                    <div class="col-md-1">
                                                    </div>
                                                    <div class="col-md-2">
                                                    </div>

                                                    <div class="col-md-2">
                                                        &nbsp;@Html.LabelFor(model => model.current_employee_id, htmlAttributes: new { @class = "control-label" })
                                                    </div>

                                                    <div class="col-md-3">
                                                        <label class="input">
                                                            @*<input type="text" name="curEmployee" id="curEmployeeID" placeholder="Employee" readonly>*@
                                                            @*<input type="text" name="employee_name" id="curremployeename" placeholder="Employee Name" class="form-control" readonly="readonly" />*@
                                                            @Html.HiddenFor(model => model.current_employee_id, htmlAttributes: new { @id = "curremployeeid" })
                                                            @Html.EditorFor(model => model.employee_name, new { htmlAttributes = new { @class = "form-control col-lg-6", @readonly = "readonly", placeholder = "Employee Name", id = "curremployeename" } })
                                                        </label>
                                                    </div>
                                                </div>
                                            </section>
                                        </fieldset>

                                        <fieldset title="Asset Transfer">
                                            <section>
                                                <div class="row">
                                                    <hr class="Bold" />
                                                    <h4> Transfer To:</h4>
                                                </div>
                                            </section>
                                            <section>
                                                <div class="row">
                                                    <div class="col-md-2">
                                                        &nbsp;@Html.LabelRequiredFor(model => model.transfer_to_location_id, htmlAttributes: new { @class = "control-label" })
                                                    </div>
                                                    <div class="col-md-5">
                                                        @*<select id="locationID" name="location" placeholder="Select Location" style="width:100%" class="form-control select2"></select>*@
                                                        @Html.DropDownList("transfer_to_location_id", null, "- Select Location -", htmlAttributes: new { @class = "form-control select2", id = "transfer_to_location_id" })
                                                        @Html.ValidationMessageFor(model => model.transfer_to_location_id, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>
                                            </section>
                                            <section>
                                                <div class="row">
                                                    <div class="col-md-2">
                                                        &nbsp;@Html.LabelRequiredFor(model => model.transfer_to_dept_id, htmlAttributes: new { @class = "control-label" })
                                                    </div>
                                                    <div class="col-md-5">
                                                        @*<select id="departmentID" name="department" placeholder="Select Department" style="width:100%" class="form-control select2"></select>*@
                                                        @Html.DropDownList("transfer_to_dept_id", null, "- Select Department -", htmlAttributes: new { @class = "form-control select2", @onChange = "FillEmployee(this.value)" })
                                                        @Html.ValidationMessageFor(model => model.transfer_to_dept_id, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>
                                            </section>
                                            <section>
                                                <div class="row">
                                                    <div class="col-md-2">
                                                        &nbsp;@Html.LabelRequiredFor(model => model.transfer_to_emp_id, htmlAttributes: new { @class = "control-label" })
                                                    </div>
                                                    <div class="col-md-5">
                                                        @Html.DropDownList("transfer_to_emp_id", null, "- Select Employee -", htmlAttributes: new { @class = "form-control select2", id = "transfer_to_emp_id" })
                                                        @Html.ValidationMessageFor(model => model.transfer_to_emp_id, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>
                                            </section>
                                        </fieldset>
                                    </fieldset>
                                    <footer>
                                        <div class="form-group">
                                            <div class="col-md-7">
                                                @Html.ActionLink("Cancel", "Index", "mutation", htmlAttributes: new { @class = "btn btn-default" })
                                                @*<button type="button" class="btn btn-primary" id="ClearBtn" onclick="Clear()">Clear</button>*@
                                                @*<button type="button" class="btn btn-primary" id="SaveBtn" onclick="Save()">Save</button>*@
                                                <input type="submit" value="Save" class="btn btn-primary" />
                                            </div>
                                        </div>
                                    </footer>
                                    @*</form>*@
                                }
                            </div>
                        </div>
                    </div>
                </article>
            </div>
        </section>
    </div>

    <!-- Modal -->
    <div class="modal fade" id="Asset" tabindex="-1" role="dialog" data-backdrop="static" data-keyboard="false">

    </div>
    <!-- /.modal -->
    <!-- end widget grid -->

</div>
<!-- END MAIN CONTENT -->


@section pagespecific {
    <script type="text/javascript">

        function ToJavaScriptDate(value) {
            const monthNames = ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"];
            var pattern = /Date\(([^)]+)\)/;
            var results = pattern.exec(value);
            var dt = new Date(parseFloat(results[1]));
            return (dt.getDate() + " " + monthNames[(parseInt(dt.getMonth()))] + " " + dt.getFullYear());
        }

        function OpenModalAssetList() {
            $("#Asset").html("");
            var assetCode = $("#assetCodeID").val();
            //alert("modal");

            $.ajax({
                url: "../mutation/ModalAsset/",
                success: function (data) {
                    $("#Asset").html(data);
                    //alert("open modal");
                    var oTable = $('#AssetTblList').DataTable({
                        "ajax": {
                            //"url": "/depreciation/GetAssetList/0",
                            "url": "/mutation/GetAssetList/0",
                            "type": "GET",
                            "datatype": "json",
                        },
                        "columns": [
                            { "data": "asset_id", "autoWidth": true },
                            { "data": "asset_number", "autoWidth": true },
                            { "data": "asset_name", "autoWidth": true },
                            {
                                "data": "action",
                                "autowidth": true,
                                "mRender": function (data, type, full) {
                                    return '<a class="btn btn-info btn-sm" data-dismiss="modal" onclick="GetAssetNumber(' + full['asset_id'] + ');">' + 'Select' + '</a>';
                                }
                            }
                        ]
                    });
                }
            });
        }

        function GetAssetNumber(id) {
            $('#CancelBtn').prop('disabled', true);

            $.ajax({
                type: 'POST',
                url: "/mutation/GetAssetList/" + id,
                dataType: 'json',
                success: function (data) {
                    $(".numeric").autoNumeric("init", {
                        aSep: ',',
                        aDec: '.',
                        aPad: false,
                    });
                    for (var i in data) {
                        $("#parent_asset_id").val(data[i].asset_id);
                        $("#parent_asset_number").val(data[i].asset_number);
                        $("#parent_asset_name").val(data[i].asset_name);
                        $("#parent_asset_receiptdate").val(ToJavaScriptDate(data[i].asset_receipt_date));

                        $("#currencycode").val(data[i].currency_code);
                        $("#bookvalue").val(data[i].asset_book_value);
                        $("#kurs").val(data[i].currency_kurs);
                        $("#assetvalue").val(data[i].asset_original_value);
                        $("#currlocationid").val(data[i].current_location_id);
                        $("#currdepartmentid").val(data[i].current_department_id);
                        $("#curremployeeid").val(data[i].current_employee_id);
                        $("#currlocationname").val(data[i].location_name);
                        $("#currdepartmentname").val(data[i].department_name);
                        $("#curremployeename").val(data[i].employee_name);

                        $("#parent_asset_number").css({ 'background-color': color_input_text });
                        $("#parent_asset_name").css({ 'background-color': color_input_text });
                        $("#parent_asset_receiptdate").css({ 'background-color': color_input_text });
                        $("#currencycode").css({ 'background-color': color_input_text });
                        $("#bookvalue").css({ 'background-color': color_input_text });
                        $("#kurs").css({ 'background-color': color_input_text });
                        $("#assetvalue").css({ 'background-color': color_input_text });
                        $("#currlocationid").css({ 'background-color': color_input_text });
                        $("#currdepartmentid").css({ 'background-color': color_input_text });
                        $("#curremployeeid").css({ 'background-color': color_input_text });
                        $("#currlocationname").css({ 'background-color': color_input_text });
                        $("#currdepartmentname").css({ 'background-color': color_input_text });
                        $("#curremployeename").css({ 'background-color': color_input_text });
                        //$("#currencyID").val(data[i].currency_code);
                        //$("#priceID").val(data[i].asset_original_value);
                        //$("#kursID").val(data[i].currency_kurs);
                        //$("#assetvalueUSDID").val(data[i].asset_book_value);

                        //$("#curLocationID").val(data[i].location_name);
                        //$("#curDepartmentID").val(data[i].department_name);
                        //$("#curEmployeeID").val(data[i].employee_name);
                    }
                },
                error: function (data) {
                    swal("Error", "Error Load Asset Data", "error");
                }
            })
        }

        function ValidateForm() {
            var $loginForm = $("#mutation-form").validate({
                // Rules for form validation
                rules: {
                    kursID: {
                        required: true,
                        number: true
                    },
                    priceID: {
                        required: true,
                        number: true
                    }
                },

                // Messages for form validation
                messages: {
                    kursID: {
                        required: 'Please enter Kurs'
                    },
                    priceID: {
                        required: 'Please enter Price'
                    }
                },

                // Do not change code below
                errorPlacement: function (error, element) {
                    error.insertAfter(element.parent());
                }
            });
        }

        function Clear() {
            $("#assetID").val("");
            $("#modeID").val("New");
            $("#assetCodeID").val("");
            $("#assetNameID").val("");
            $("#receiptDateID").val("");
            $("#priceID").val("");
            $("#kursID").val("");
            $("#assetvalueUSDID").val("");

            $("#curLocationID").val("");
            $("#curDepartmentID").val("");
            $("#curEmployeeID").val("");

            $("#locationID").select2("val", "0");
            $("#departmentID").select2("val", "0");
            $("#employeeID").select2("val", "0");

            $('#SaveBtn').prop('disabled', true);
            $('#ClearBtn').prop('disabled', true);
            //$('#EditBtn').prop('disabled', true);
            //$('#CancelBtn').prop('disabled', true);
        }

        function Save() {
            ValidateForm();
            var urlSave = '/mutation/Save/';
            $.ajax({
                type: 'POST',
                url: urlSave,
                data: $("#mutation-form").serialize(),
                success: function (result) {
                    //alert(result);
                    swal({
                        title: "Success",
                        text: result,
                        type: "success"
                    });
                    $('#ClearBtn').prop('disabled', false);
                    $('#SaveBtn').prop('disabled', true);
                    //$('#EditBtn').prop('disabled', false);
                    //$('#CancelBtn').prop('disabled', true);
                    //$('#DeleteBtn').prop('disabled', false);

                    $("#modeID").val("Edit");
                },
                error: function (data) {
                    swal("Error", "Error Save Mutation Data", "error");
                }
            })
        }

        $(document).ready(function () {

            //$.getJSON('/asset_location/GetAssetLocation', function (data) {
            //    var output = '<option value="0"> Select Location </option>';
            //    $.each(data, function (key, entry) {
            //        output += '<option value=' + entry.location_id + '>' + entry.location_name + '</option>';
            //    })
            //    $("#locationID").html(output);
            //});

            //$.getJSON('/department/GetDepartment', function (data) {
            //    var output = '<option value="0"> Select Department </option>';
            //    $.each(data, function (key, entry) {
            //        output += '<option value=' + entry.department_id + '>' + entry.department_name + '</option>';
            //    })
            //    $("#departmentID").html(output);
            //});

            //$.getJSON('/employee/GetEmployee', function (data) {
            //    var output = '<option value="0"> Select Employee </option>';
            //    $.each(data, function (key, entry) {
            //        output += '<option value=' + entry.employee_id + '>' + entry.employee_name + '</option>';
            //    })
            //    $("#employeeID").html(output);
            //});
        })

        //function CallChangefunc(loc_id, dept_id) {
        //    window.location.href = "/mutation/RequestMutation?location_id=" + loc_id + "&department_id=" + dept_id;
        //}

        function FillEmployee(dept_id) {
            var loc_id = $("#transfer_to_location_id").val();
            $.ajax({
                "url": "/mutation/GetEmployeeList?location_id=" + loc_id + "&department_id=" + dept_id,
                "type": "GET",
                "dataType": "json",
                success: function (data) {
                    var output = '<option value="0"> Select Employee </option>';
                    $.each(data, function (key, entry) {
                        output += '<option value=' + entry.employee_id + '>' + entry.employee_name + '</option>';
                    })
                    $("#transfer_to_emp_id").html(output);
                },
                error: function (err) {
                    alert(err);
                }
            });
        }
    </script>
}