@model IEnumerable<ASM_UI.Models.disposalViewModel>
@{
    ViewBag.Title = "Disposal Process";
}

<div id="content">
    <!-- row -->
    <div class="row">
        <div class="col-xs-12 col-sm-9 col-md-9 col-lg-9">
            <h1 class="page-title txt-color-blueDark">

                <!-- PAGE HEADER -->
                <i class="fa-fw fa fa-pencil-square-o"></i>
                Disposal
                >
                <span>
                    Process
                </span>
            </h1>
        </div>
    </div>
    <section id="widget-grid" class="">
        <div class="row">
            <article class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
                <div class="jarviswidget jarviswidget-color-darken" id="wid-id-0" data-widget-editbutton="false">

                    <header>
                        <span class="widget-icon"> <i class="fa fa-table"></i> </span>
                        <h2>Disposal Process List</h2>

                    </header>
                    <div>
                        <!-- widget edit box -->
                        <div class="jarviswidget-editbox">
                            <!-- This area used as dropdown edit box -->

                        </div>
                        <!-- end widget edit box -->
                        <div class="widget-body no-padding">
                            <table class="table table-responsive table-striped table-bordered table-hover" id="table_basic">
                                <thead>
                                    <tr>
                                        <th>
                                            @Html.DisplayNameFor(model => model.disposal_number)
                                        </th>
                                        <th>
                                            @Html.DisplayNameFor(model => model.request_date)
                                        </th>
                                        <th>
                                            @Html.DisplayNameFor(model => model.asset_number)
                                        </th>
                                        <th>
                                            @Html.DisplayNameFor(model => model.asset_name)
                                        </th>
                                        <th>
                                            @Html.DisplayNameFor(model => model.company_id)
                                        </th>
                                        <th>
                                            @Html.DisplayNameFor(model => model.location_id)
                                        </th>
                                        <th>
                                            @Html.DisplayNameFor(model => model.department_id)
                                        </th>
                                        <th>
                                            @Html.DisplayNameFor(model => model.employee_id)
                                        </th>
                                        <th>Approval Status</th>
                                        <th>
                                            @Html.DisplayNameFor(model => model.fl_announcement_status)
                                        </th>
                                        <th>
                                            @Html.DisplayNameFor(model => model.fl_fin_announcement)
                                        </th>
                                        <th>
                                            @Html.DisplayNameFor(model => model.fl_remove_asset)
                                        </th>
                                    </tr>
                                </thead>
                            </table>
                        </div>
                    </div>
                </div>
            </article>
        </div>

    </section>
</div>



@section pagespecific {
    <script type="text/javascript">

        $(document).ready(function () {
            var responsiveHelper_dt_basic = undefined;
            var responsiveHelper_datatable_fixed_column = undefined;
            var responsiveHelper_datatable_col_reorder = undefined;
            var responsiveHelper_datatable_tabletools = undefined;

            var breakpointDefinition = {
                tablet: 1024,
                phone: 480
            };

            $('#table_basic').dataTable({
                "ajax": {
                    "url": "/disposalprocess/GetDisposalList/",
                    "type": "GET",
                    "datatype": "json",
                },
                "columns": [
                    { "data": "disposal_number", "autoWidth": true },
                    {
                        "data": "request_date", "autoWidth": true,
                        "mRender": function (data, type, full) {
                            var currentTime = new Date(parseInt(full['request_date'].substr(6)));
                            var month = currentTime.getMonth() + 1;
                            var day = currentTime.getDate();
                            var year = currentTime.getFullYear();
                            return day + "-" + month + "-" + year;
                        }
                    },
                    { "data": "asset_number", "autoWidth": true },
                    { "data": "asset_name", "autoWidth": true },
                    { "data": "company.company_code", "autoWidth": true },
                    { "data": "location_name", "autoWidth": true },
                    { "data": "department_name", "autoWidth": true },
                    { "data": "employee_name", "autoWidth": true },
                    {
                        "data": "approval_date", "autoWidth": true,
                        "mRender": function (data, type, full) {
                            var currentTime = new Date(parseInt(full['approval_date'].substr(6)));
                            var month = currentTime.getMonth() + 1;
                            var day = currentTime.getDate();
                            var year = currentTime.getFullYear();
                            var date = day + "-" + month + "-" + year;
                            return full['request_status_name'] + '<br />' + date;
                        }
                    },
                    {
                        "data": "announcement_date",
                        "autowidth": true,
                        "mRender": function (data, type, full) {
                            var date;
                            if (full['announcement_date'] != null) {
                                var currentTime = new Date(parseInt(full['announcement_date'].substr(6)));
                                var month = currentTime.getMonth() + 1;
                                var day = currentTime.getDate();
                                var year = currentTime.getFullYear();
                                date = day + "-" + month + "-" + year;
                            }

                            if (full['fl_SuggestionChanges'] == true) {
                                return '<a href="/disposalprocess/Details/' + full['announcement_id'] + '">' + "Disposal Changes" + '</a>';
                            }
                            else if (full['announcement_date'] == null) {
                                return '<a href="/disposalprocess/process/' + full['announcement_id'] + '">' + "Process" + '</a>';
                            }
                            else if (full['fin_announcement_date'] == null) {
                                return '<a href="/disposalprocess/Details/' + full['announcement_id'] + '">' + "Completed" + '<br />' + date + '</a>';
                            }
                            else {
                                return "Completed" + '<br />' + date;
                            }
                        }
                    },
                    {
                        "data": "fin_announcement_date",
                        "autowidth": true,
                        "mRender": function (data, type, full) {
                            var date;
                            if (full['fin_announcement_date'] != null) {
                                var currentTime = new Date(parseInt(full['fin_announcement_date'].substr(6)));
                                var month = currentTime.getMonth() + 1;
                                var day = currentTime.getDate();
                                var year = currentTime.getFullYear();
                                date = day + "-" + month + "-" + year;
                            }

                            if (full['fl_SuggestionChanges'] == true) {
                                return '<a href="/disposalprocess/Details/' + full['announcement_id'] + '">' + "Disposal Changes" + '</a>';
                            }
                            else if (full['fin_announcement_date'] == null && full['fl_fin_announcement'] == true && full['fin_announcement_dept_id'] == full['department_id']) {
                                return '<a href="/disposalprocess/process/' + full['announcement_id'] + '">' + "Process" + '</a>';
                            }
                            else if (full['fin_announcement_date'] != null) {
                                return '<a href="/disposalprocess/Details/' + full['announcement_id'] + '">' + "Completed" + '<br />' + date + '</a>';
                            }
                            else { return ""; }
                        }
                    },
                    {
                        "data": "remove_asset_date", "autoWidth": true,
                        "mRender": function (data, type, full) {
                            if (full['remove_asset_date'] != null) {
                                var currentTime = new Date(parseInt(full['remove_asset_date'].substr(6)));
                                var month = currentTime.getMonth() + 1;
                                var day = currentTime.getDate();
                                var year = currentTime.getFullYear();
                                var date = day + "-" + month + "-" + year;
                                return "Completed" + '<br />' + date;
                            } else { return ""; }
                        }
                    }

                ]
            },
            {
                "sDom": "<'dt-toolbar'<'col-xs-12 col-sm-6'f><'col-sm-6 col-xs-12 hidden-xs'l>r>" +
                    "t" +
                    "<'dt-toolbar-footer'<'col-sm-6 col-xs-12 hidden-xs'i><'col-xs-12 col-sm-6'p>>",
                "autoWidth": true,
                "oLanguage": {
                    "sSearch": '<span class="input-group-addon"><i class="glyphicon glyphicon-search"></i></span>'
                },
                "preDrawCallback": function () {
                    // Initialize the responsive datatables helper once.
                    if (!responsiveHelper_dt_basic) {
                        responsiveHelper_dt_basic = new ResponsiveDatatablesHelper($('#table_basic'), breakpointDefinition);
                    }
                },
                "rowCallback": function (nRow) {
                    responsiveHelper_dt_basic.createExpandIcon(nRow);
                },
                "drawCallback": function (oSettings) {
                    responsiveHelper_dt_basic.respond();
                }
            });
        });

    </script>
}
