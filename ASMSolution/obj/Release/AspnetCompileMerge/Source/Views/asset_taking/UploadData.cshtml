@model ASM_UI.Models.asset_takingViewModel

@{
    ViewBag.Title = "Asset Taking Upload";
}
<div id="content">
    <div class="row">
        <div class="col-xs-12 col-sm-9 col-md-9 col-lg-9">
            <h1 class="page-title txt-color-blueDark">

                <!-- PAGE HEADER -->
                <i class="fa-fw fa fa-pencil-square-o"></i>
                Asset Taking
                <span>
                    >
                    Upload Data
                </span>
            </h1>
        </div>
    </div>

    <section id="widget-grid" class="">
        <div class="row">
            <article class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
                <div class="jarviswidget" id="wid-id-3" data-widget-editbutton="false" data-widget-custombutton="false" data-widget-togglebutton="false" data-widget-collapsed="false">
                    <header>
                        <span class="widget-icon"> <i class="fa fa-edit"></i> </span>
                        <h2>Upload Data</h2>

                    </header>
                    <!-- widget div-->
                    <div>

                        <!-- widget edit box -->
                        <div class="jarviswidget-editbox">
                            <!-- This area used as dropdown edit box -->

                        </div>
                        <!-- end widget edit box -->
                        <!-- widget content -->
                        <div class="widget-body no-padding">

                            @using (Html.BeginForm("UploadData", "asset_taking", FormMethod.Post, htmlAttributes: new { @class = "smart-form", enctype = "multipart/form-data" }))
                            {
                                <header>
                                    Upload Data Asset Taking
                                </header>

                                <fieldset>
                                    @Html.AntiForgeryToken()
                                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                    @Html.HiddenFor(model => model.asset_taking_id)
                                    @Html.HiddenFor(model => model.process_id)

                                    <section>
                                        <div class="row">
                                            <div class="col-md-1">
                                            </div>
                                            <div class="col-md-2">
                                                @Html.LabelFor(model => model.company_name, htmlAttributes: new { @class = "control-label" })
                                            </div>
                                            <div class="col-md-8">
                                                <label class="input">
                                                    @Html.DisplayFor(model => model.company_name)
                                                </label>
                                            </div>
                                        </div>
                                    </section>
                                    <section>
                                        <div class="row">
                                            <div class="col-md-1">
                                            </div>
                                            <div class="col-md-2">
                                                <b>@Html.LabelRequiredFor(model => model.location_id)</b>
                                            </div>
                                            <div class="col-md-2">
                                                <label class="input">
                                                    @Html.DropDownListFor(model => model.location_reg_id, new SelectList(Model.location_reg_list, "asset_reg_location_id", "asset_reg_location_name"), htmlAttributes: new { @class = "form-control select2", @readonly = "true" })
                                                </label>
                                            </div>
                                            <div class="col-md-3">
                                                <label class="input">
                                                    @Html.DropDownListFor(model => model.location_id, new SelectList(Model.location_list, "location_id", "location_name"), "- Select Location -", htmlAttributes: new { @class = "form-control select2", @readonly = "true" })
                                                    @Html.ValidationMessageFor(model => model.location_id, "", new { @class = "text-danger" })
                                                </label>
                                            </div>
                                        </div>
                                    </section>
                                    <section>
                                        <div class="row">
                                            <div class="col-md-1">
                                            </div>
                                            <div class="col-md-2">
                                                @Html.LabelRequiredFor(model => model.period_year, htmlAttributes: new { @class = "control-label" })
                                            </div>
                                            <div class="col-md-2">
                                                <label class="input">
                                                    @Html.DropDownListFor(model => model.period_year, new SelectList(Model.period_year_list, "value", "text"), "- Select Year -", htmlAttributes: new { @id = "year", @class = "form-control select2", @readonly = "true" })
                                                    @Html.ValidationMessageFor(model => model.period_year, "", new { @class = "text-danger" })
                                                </label>
                                            </div>
                                        </div>
                                    </section>
                                    <section>
                                        <div class="row">
                                            <div class="col-md-1">
                                            </div>
                                            <div class="col-md-2">
                                                @Html.LabelRequiredFor(model => model.period_month, htmlAttributes: new { @class = "control-label" })
                                            </div>
                                            <div class="col-md-2">
                                                <label class="input">
                                                    @Html.DropDownListFor(model => model.period_month, new SelectList(Model.period_month_list, "value", "text"), "- Select Month -", htmlAttributes: new { @id = "month", @class = "form-control select2", @readonly = "true" })
                                                    @Html.ValidationMessageFor(model => model.period_month, "", new { @class = "text-danger" })
                                                </label>
                                            </div>
                                        </div>
                                    </section>
                                    @if (Model.file_name == null)
                                    {
                                        <section>
                                            <div class="row">
                                                <div class="col-md-1">
                                                </div>
                                                <div class="col-md-2">
                                                    @Html.LabelRequiredFor(model => model.file_name, htmlAttributes: new { @class = "control-label" })
                                                </div>
                                                <div class="col-md-8">
                                                    <label class="input">
                                                        <span class="input-group-btn">
                                                            <span class="btn btn-default btn-file">
                                                                Browse asset taking file ( *.txt)
                                                                @Html.TextBoxFor(model => model.file_name, new { type = "file", @class = "form-control" })
                                                            </span>
                                                        </span>
                                                        @Html.ValidationMessageFor(model => model.file_name, "", new { @class = "text-danger" })
                                                    </label>
                                                </div>
                                            </div>
                                        </section>
                                    }
                                    else
                                    {
                                        <section>
                                            <div class="row">
                                                <div class="col-md-1">
                                                </div>
                                                <div class="col-md-2">
                                                    @Html.LabelFor(model => model.file_name, htmlAttributes: new { @class = "control-label" })
                                                </div>
                                                <div class="col-md-8">
                                                    <label class="input">
                                                        @Html.DisplayFor(model => model.file_name)
                                                    </label>
                                                </div>
                                            </div>
                                        </section>
                                    }
                                    @if (Model.asset_taking_id > 0)
                                    {
                                        <section>
                                            <div>
                                                <div class="col-md-1">
                                                </div>
                                                <div class="widget-body no-padding">
                                                    <table class="table table-striped table-bordered table-responsive table-hover" id="table_basic">
                                                        <thead>
                                                            <tr>
                                                                <th>
                                                                    @Html.DisplayNameFor(model => model.asset_number)
                                                                </th>
                                                                <th>
                                                                    @Html.DisplayNameFor(model => model.asset_name)
                                                                </th>
                                                                <th>
                                                                    Status
                                                                </th>
                                                                <th>
                                                                    Data
                                                                </th>
                                                                <th>
                                                                    Physical
                                                                </th>
                                                                <th>
                                                                    Remark
                                                                </th>
                                                            </tr>
                                                        </thead>
                                                    </table>
                                                </div>
                                            </div>
                                        </section>
                                    }
                                </fieldset>
                                <footer>
                                    @if (Model.file_name == null)
                                    {
                                        <div class="form-group">
                                            <div class="col-md-1">
                                            </div>
                                            <div class="col-md-1">
                                                <input type="submit" value="Checking File" class="btn btn-primary" />
                                            </div>
                                            <div class="col-md-1">
                                                @Html.ActionLink("Close", "Index", "asset_taking", htmlAttributes: new { @class = "btn btn-default" })
                                            </div>
                                        </div>
                                    }
                                    @if (Model.fl_submit_data == null && Model.asset_taking_id > 0)
                                    {
                                        <div class="form-group">
                                            <div class="col-md-3">
                                                @Html.ActionLink("Cancel", "CancelItem", "asset_taking", new { id = Model.asset_taking_id }, htmlAttributes: new { @class = "btn btn-danger", onclick = "return confirm('Are you sure you want to cancel?');" })
                                                <input type="submit" value="Submit Data" class="btn btn-primary" />
                                                @Html.HiddenFor(model => model.fl_submit_data)
                                            </div>
                                        </div>
                                    }
                                    @if (Model.fl_submit_data != null)
                                    {
                                        <div class="form-group">
                                            <div class="col-md-1">
                                                @Html.ActionLink("Close", "Index", "asset_taking", htmlAttributes: new { @class = "btn btn-primary" })
                                            </div>
                                        </div>
                                    }
                                </footer>
                            }
                        </div>
                    </div>
                </div>
            </article>
        </div>
    </section>
    <!-- Modal -->
    <div class="modal fade" id="Asset" tabindex="-1" role="dialog">
    </div>
</div>

@section pagespecific {
    <script type="text/javascript">
        $(document).ready(function () {
            var responsiveHelper_dt_basic = undefined;
            var responsiveHelper_datatable_fixed_column = undefined;
            var responsiveHelper_datatable_col_reorder = undefined;
            var responsiveHelper_datatable_tabletools = undefined;

            var breakpointDefinition = {
                tablet: 1024,
                phone: 480
            };

            var statuslist;
            $.ajax({
                "url": "/asset_taking/GetAssetStatusList/",
                "type": "GET",
                "dataType": "json",
                success: function (data) {
                    $.each(data, function (key, entry) {
                        statuslist += '<option value=' + entry.asset_status_id + '>' + entry.asset_status_name + '</option>';
                    })
                    statuslist += '</select>';        
                }
            });

            $('#table_basic').dataTable(
                {
                    "ajax": {
                        "url": "/asset_taking/GetAssetTakingSubmit?id=" + @Model.asset_taking_id + "&process_id=" + @Model.process_id,
                        "type": "GET",
                        "datatype": "json",
                    },
                    "columns": [
                        { "data": "asset_number", "autoWidth": true },
                        { "data": "asset_name", "autoWidth": true },
                         {
                             "data": "asset_status_id",
                             "autowidth": true,
                             "mRender": function (data, type, full) {
                                 if (full['fl_submit_data'] == true)
                                 {
                                     return full['asset_status_name'];
                                 }
                                 else
                                 {
                                     var listdata = '<select id="'+ full['asset_number'] +'" name="'+ full['asset_number'] +'" onchange="SelectChange(this);">';
                                     var statusselect;
                                     var statusselected;
                                     listdata += '<option value="0"> -- Select Status -- </option>';
                                     statusselect = '<option value=' + full['asset_status_id'] + '>' + full['asset_status_name'] + '</option>';
                                     statusselected = '<option value=' + full['asset_status_id'] + ' selected>' + full['asset_status_name'] + '</option>';
                                     listdata += statuslist;
                                     listdata = listdata.replace(statusselect, statusselected);
                                     //$('#status_list_' + full['asset_number']).val(full['asset_status_id']);
                                     return listdata;
                                 }
                             }
                         },
                        {
                            "data": "asset_id",
                            "autowidth": true,
                            "mRender": function (data, type, full) {
                                if (full['asset_id'] != null) {
                                    return "Yes";
                                }
                                else if (full['asset_id'] == null) {
                                    //ganti cell menjadi merah
                                    return "No"; }
                            }
                        },
                        {
                            "data": "asset_id",
                            "autowidth": true,
                            "mRender": function (data, type, full) {
                                if (full['fl_available_asset'] == true) {
                                    return "Yes";
                                }
                                else if (full['fl_available_asset'] == false) {
                                    //ganti cell menjadi merah
                                    return "No"; }
                            }
                        },
                        {
                            "data": "location_id",
                            "autowidth": true,
                            "mRender": function (data, type, full) {
                                if (full['location_id'] != full['location_id2']) {
                                    return "Wrong Asset Location";
                                }
                                else
                                {return ""}
                            }
                        }
                    ]
                },
                {
                    "sDom": "<'dt-toolbar'<'col-xs-12 col-sm-6'f><'col-sm-6 col-xs-12 hidden-xs'l>r>" +
                        "t" +
                        "<'dt-toolbar-footer'<'col-sm-6 col-xs-12 hidden-xs'i><'col-xs-12 col-sm-6'p>>",
                    "autoWidth": true,
                    "oLanguage": {
                        "sSearch": '<span class="input-group-addon"><i class="glyphicon glyphicon-search"></i></span>'
                    },
                    "preDrawCallback": function () {
                        // Initialize the responsive datatables helper once.
                        if (!responsiveHelper_dt_basic) {
                            responsiveHelper_dt_basic = new ResponsiveDatatablesHelper($('#table_basic'), breakpointDefinition);
                        }
                    },
                    "rowCallback": function (nRow) {
                        responsiveHelper_dt_basic.createExpandIcon(nRow);
                    },
                    "drawCallback": function (oSettings) {
                        responsiveHelper_dt_basic.respond();
                    }
                });
        });

        function SelectChange(AssetStatus)
        {
            swal({
                title: "Are you sure want to update this data?",
                text: "(this process can\'t be undo)",
                type: "warning",
                showCancelButton: true,
                confirmButtonColor: "#DD6B55",
                confirmButtonText: "Yes, Sure!",
                closeOnConfirm: false,
                closeOnEsc: false,
                closeOnCancel: false,
                showLoaderOnConfirm: true,
                preConfirm: () => {
                    return new Promise(() => {
                        //ajax side
                        swal({
                            title: 'Please wait... Update data in progress....',
                            onOpen: function () {
                                swal.showLoading()
                                $.ajax({
                                    type: "GET",
                                    url: "/asset_taking/UpdateAssetStatus?asset_number=" + AssetStatus.id + "&asset_status_id=" + AssetStatus.value,
                                    success: function (data) {
                                        if (data == "1") {
                                            swal.close();
                                            swal("Success", "Success Update Data", "success");
                                            //setTimeout(location.reload(true), 5000);
                                        }
                                        else {
                                            swal("Failed", "Failed Update Data", "error");
                                        }

                                    },
                                });
                            }
                        });
                    })
                },
                allowOutsideClick: () => !swal.isLoading()
            }).then((result) => {
                if (result.dismiss) {
                    swal("Cancel", "You Cancel Update Data", "error");
                }
            });
        }
    </script>
}